generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   password  String
//   firstName String
//   lastName  String
//   createdAt DateTime @default(now())
// }

// model User {
//   id        Int         @id @default(autoincrement())
//   firstName String
//   lastName  String
//   email     String      @unique
//   password  String
//   createdAt DateTime    @default(now())

//   // Add relation field for purchases
//   purchases Purchase[]  @relation("UserPurchases")
// }

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())

  purchases Purchase[] @relation("UserPurchases")
}




model Address {
  id          Int    @id @default(autoincrement())
  street      String
  city        String
  province    String
  country     String
  postal_code String
}

// model Product {
//   id        Int      @id @default(autoincrement())
//   name      String
//   description  String
//   cost    String
//   filename  String?
//   createdAt DateTime @default(now())
// }


// model Product {
//   id          Int         @id @default(autoincrement())
//   name        String
//   description String
//   cost        Float
//   filename    String?
//   createdAt   DateTime    @default(now())

//   // Add relation field for purchases
//   purchases   Purchase[]  @relation("ProductPurchases")
// }


model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  cost        Float
  filename    String?
  createdAt   DateTime    @default(now())

  purchases   PurchaseItem[] @relation("ProductPurchases")
}


// model Purchase {
//   id        Int      @id @default(autoincrement())
//   productId Int
//   userId    Int
//   quantity  Int
//   totalCost Float    // Changed from Decimal to Float
//   createdAt DateTime @default(now())

//   product   Product  @relation("ProductPurchases", fields: [productId], references: [id])
//   user      User     @relation("UserPurchases", fields: [userId], references: [id])
// }

model Purchase {
  purchase_id Int           @id @default(autoincrement())
  customer_id Int
  street      String
  city        String
  province    String
  country     String
  postal_code String
  credit_card String
  credit_expire String
  credit_cvv  String
  invoice_amt Float
  invoice_tax Float
  invoice_total Float
  order_date  DateTime      @default(now())

  // Relations
  customer      User        @relation("UserPurchases", fields: [customer_id], references: [id])
  items         PurchaseItem[]
}


// model PurchaseItem {
//   purchase_id Int
//   product_id  Int
//   quantity    Int

//   // Composite primary key
//   @@id([purchase_id, product_id])

//   // Relations
//   purchase   Purchase @relation(fields: [purchase_id], references: [purchase_id])
//   product    Product  @relation(fields: [product_id], references: [id])
// }

model PurchaseItem {
  purchase_id Int
  product_id  Int
  quantity    Int

  // Relations
  purchase    Purchase   @relation(fields: [purchase_id], references: [purchase_id])
  product     Product    @relation("ProductPurchases", fields: [product_id], references: [id])

  @@id([purchase_id, product_id]) // Composite primary key
}




